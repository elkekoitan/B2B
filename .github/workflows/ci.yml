name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Docs check
        run: make docs-check

  docs-links:
    runs-on: ubuntu-latest
    needs: [docs]
    steps:
      - uses: actions/checkout@v5
      - name: Link check (lychee)
        uses: lycheeverse/lychee-action@v1
        with:
          args: >-
            --no-progress --verbose --accept 200,206,429
            --exclude "^http://localhost" --exclude "^https://localhost"
            --exclude-mail
            .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  backend:
    needs: [docs-links]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint
        run: |
          pip install ruff black
          ruff check app
      - name: Test
        run: |
          pip install pytest pytest-cov
          pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=term-missing --cov-report=xml
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.xml

  sast:
    needs: [docs-links]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install scanners
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit
      - name: Bandit (static analysis)
        run: bandit -r app -ll -q || true
      - name: pip-audit (dependencies)
        run: pip-audit -r requirements.txt || true

  frontend:
    needs: [docs-links]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Cache pnpm store
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Lint (if configured)
        run: pnpm run -s lint || echo "lint skipped"
      - name: Build
        run: pnpm run -s build
      - name: Audit (non-blocking)
        run: pnpm audit --prod --audit-level=high || true

  agents:
    needs: [docs-links]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r agent_orchestrator/requirements.txt || true
          pip install ruff
      - name: Lint orchestrator
        run: ruff check agent_orchestrator || true
