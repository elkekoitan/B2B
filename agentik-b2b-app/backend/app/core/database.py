from supabase import create_client, Client\nfrom app.core.config import settings\nfrom loguru import logger\nfrom typing import Optional\n\n# Global Supabase clients\nsupabase: Optional[Client] = None\nsupabase_admin: Optional[Client] = None\n\nasync def init_db():\n    \"\"\"Initialize Supabase connections\"\"\"\n    global supabase, supabase_admin\n    \n    try:\n        # Regular client with anon key\n        supabase = create_client(\n            settings.SUPABASE_URL,\n            settings.SUPABASE_ANON_KEY\n        )\n        \n        # Admin client with service role key (if available)\n        if settings.SUPABASE_SERVICE_ROLE_KEY:\n            supabase_admin = create_client(\n                settings.SUPABASE_URL,\n                settings.SUPABASE_SERVICE_ROLE_KEY\n            )\n            logger.info(\"Supabase admin connection initialized\")\n        \n        logger.info(\"Supabase connection initialized successfully\")\n        return supabase\n        \n    except Exception as e:\n        logger.error(f\"Failed to initialize Supabase connection: {e}\")\n        raise\n\ndef get_db() -> Client:\n    \"\"\"Get Supabase client dependency\"\"\"\n    if not supabase:\n        raise RuntimeError(\"Database not initialized\")\n    return supabase\n\ndef get_admin_db() -> Client:\n    \"\"\"Get Supabase admin client (with service role key)\"\"\"\n    if not supabase_admin:\n        # Fallback to regular client if admin not available\n        return get_db()\n    return supabase_admin\n\nasync def test_connection():\n    \"\"\"Test database connection\"\"\"\n    try:\n        if not supabase:\n            return False\n            \n        result = supabase.table(\"companies\").select(\"id\").limit(1).execute()\n        logger.info(\"Database connection test successful\")\n        return True\n    except Exception as e:\n        logger.error(f\"Database connection test failed: {e}\")\n        return False\n\nasync def execute_rpc(function_name: str, params: dict = None):\n    \"\"\"Execute a database RPC function\"\"\"\n    try:\n        if not supabase:\n            raise RuntimeError(\"Database not initialized\")\n            \n        result = supabase.rpc(function_name, params or {}).execute()\n        return result\n    except Exception as e:\n        logger.error(f\"RPC execution failed: {function_name} - {e}\")\n        raise\n